#include <iostream>
#include <juice/juice.hpp>

// Пример класса для сериализации и десериализации
class MyClass {
public:
    std::string name;
    int age;
    float weight;
    bool isActive;
    
    template<typename Archive>
    void serialize(Archive& ar) {
        ar(name, age, weight, isActive);
    }
};

int main() {
    // Создание экземпляра класса
    MyClass obj;
    obj.name = "John";
    obj.age = 30;
    obj.weight = 75.5f;
    obj.isActive = true;
    
    // Сериализация класса
    juice::juicebox jb;
    jb.store("MyClass", obj);
    
    // Получение XML-представления класса
    std::string xml = jb.to_string();
    std::cout << "Serialized XML:\n" << xml << std::endl;
    
    // Десериализация класса
    MyClass deserializedObj;
    jb.restore("MyClass", deserializedObj);
    
    // Вывод десериализованного объекта
    std::cout << "Deserialized Object:\n";
    std::cout << "Name: " << deserializedObj.name << std::endl;
    std::cout << "Age: " << deserializedObj.age << std::endl;
    std::cout << "Weight: " << deserializedObj.weight << std::endl;
    std::cout << "Is Active: " << deserializedObj.isActive << std::endl;
    
    return 0;
}
